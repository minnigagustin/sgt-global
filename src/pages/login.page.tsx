import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import {
  Button,
  Checkbox,
  Flex,
  FormControl,
  FormLabel,
  Heading,
  Input,
  Link,
  Stack,
  Image,
  Box,
} from "@chakra-ui/react";
import axios from "axios";
import { useState } from "react";
import { useAuthStore } from "@component/stores/auth";
import { useRouter } from "next/router";
import { AxiosUrl } from "@component/configs/AxiosConfig";

const inter = Inter({ subsets: ["latin"] });

export default function Login() {
  const router = useRouter();
  const [error, setError] = useState(false);
  const [username, setUsername] = useState("");
  const [loading, setLoading] = useState(false);
  const [password, setPassword] = useState("");
  const { login } = useAuthStore();

  const handleSubmit = async (event: any) => {
    event.preventDefault();

    setError(false);
    setLoading(true);

    try {
      const data = await AxiosUrl.post(`nacion_login_api.php`, {
        usuario: username,
        password: password,
      }).then((response) => response.data);
      login(data);
      router.push("/");
    } catch (e) {
      setError(true);
      setPassword("");
      setLoading(false);
    }
  };
  return (
    <>
      <Head>
        <title>{process.env.NAME_COMMERCE}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Stack minH={"100vh"} direction={{ base: "column", md: "row" }}>
        <Flex p={8} flex={1} align={"center"} justify={"center"}>
          <Stack
            spacing={4}
            w={"full"}
            maxW={"md"}
            justify={"center"}
            align={"center"}
          >
            {process.env.LOGO_COMMERCE && (
              <Image src={process.env.LOGO_COMMERCE} w={200} mb={4} />
            )}
            <Stack spacing={4} boxShadow="2xl" p={14} borderRadius={8}>
              <Heading fontSize={"xl"} color={"#b032e7"}>
                INGRESE SU USUARIO Y CONTRASEÑA
              </Heading>
              <FormControl id="email">
                <Input
                  type="text"
                  placeholder="Usuario"
                  onChange={(e) => setUsername(e.target.value)}
                />
              </FormControl>
              <FormControl id="password">
                <Input
                  placeholder="Contraseña"
                  type="password"
                  onChange={(e) => setPassword(e.target.value)}
                />
              </FormControl>
              <Stack spacing={6}>
                {error && !loading && (
                  <div>
                    {error && (
                      <Box
                        color="white"
                        bg="red"
                        p={4}
                        borderRadius={4}
                        fontWeight="bold"
                      >
                        Usuario o contraseña incorrectos
                      </Box>
                    )}
                  </div>
                )}
                <Button
                  isLoading={loading}
                  loadingText="Ingresando"
                  type="submit"
                  colorScheme={"blue"}
                  variant={"solid"}
                  onClick={handleSubmit}
                  bg={"#b032e7"}
                  w="full"
                >
                  Iniciar
                </Button>
              </Stack>
            </Stack>
          </Stack>
        </Flex>
      </Stack>
    </>
  );
}
